@model RHOnline.Models.ViewModels.HoleriteVM
@using RHOnline.Models
@{
    Layout = "";
    @using RHOnline.Library.Globalization;
    string periodo;

    periodo = "";

    @switch (Model.CompetenciaMes)
    {
        case 1:

            periodo = "Janeiro/" + Model.CompetenciaAno;

            break;
        case 2:

            periodo = "Fevereiro/" + Model.CompetenciaAno;

            break;
        case 3:

            periodo = "Março/" + Model.CompetenciaAno;

            break;
        case 4:

            periodo = "Abril/" + Model.CompetenciaAno;

            break;
        case 5:

            periodo = "Maio/" + Model.CompetenciaAno;

            break;
        case 6:

            periodo = "Junho/" + Model.CompetenciaAno;

            break;
        case 7:

            periodo = "Julho/" + Model.CompetenciaAno;

            break;
        case 8:

            periodo = "Agosto/" + Model.CompetenciaAno;

            break;
        case 9:

            periodo = "Setembro/" + Model.CompetenciaAno;

            break;
        case 10:

            periodo = "Outubro/" + Model.CompetenciaAno;

            break;
        case 11:

            periodo = "Novembro/" + Model.CompetenciaAno;

            break;
        case 12:

            periodo = "Dezembro/" + Model.CompetenciaAno;

            break;
        default:

            periodo = "";

            break;

    }
    }

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Holerite</title>
    <link href="~/css/holerite.css" rel="stylesheet" />
</head>
<body>

    <div class="cabecalho-topo flexrow">

        <div >
            @Model.Usuario.Loja.RazaoSocial
            <br />
            @Model.Usuario.Loja.Endereco, @Model.Usuario.Loja.Numero
            <br />
            @Convert.ToUInt64(Model.Usuario.Loja.CNPJ).ToString(@"00\.000\.000\/0000\-00")


        </div>
        
        <div >
            <br />
            @Model.Usuario.Loja.Cidade - @Model.Usuario.Loja.UF


        </div>
        
        <div class="texto-direita" >
            RECIBO DE PAGAMENTO
            <br />
            @Model.Tipo.ToUpper()
            <br />

            @periodo

        </div>

    </div>


    <div class="cabecalho-base">
        <table>
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Nome</th>
                    <th>Cbo</th>
                    <th>Empresa</th>
                    <th>Local</th>
                    <th>Depto</th>
                    <th>Setor</th>
                    <th>Secao</th>
                    <th>Folha</th>
                </tr>
            </thead>
            <tr>
                <td>@Model.Usuario.Id</td>
                <td>@Model.Usuario.Nome.ToUpper()</td>
                <td>@Model.Cbo</td>
                <td></td>
                <td></td>
                <td>0</td>
                <td>0</td>
                <td>0</td>
                <td>1</td>
            </tr>
            <tr>
                <td></td>
                <td>@Model.Cargo.ToUpper()</td>
                <td>ADMISSÃO: @Globalization.DataCurtaBR(Model.Usuario.DataAdmissao)</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        </table>
    </div>
    <div class="lancamentos">
        <table class="lancamentos">
            <thead>
                <tr>
                    <th class="descricao">Código</th>
                    <th>Descrição</th>
                    <th class="descricao">Referência</th>
                    <th class="descricao">Vencimentos</th>
                    <th class="descricao">Descontos</th>
                </tr>
            </thead>

            @foreach (Evento evento in Model.Eventos)
            {
                <tr>
                    <td class="descricao">@evento.Codigo</td>
                    <td>@evento.Descricao.ToUpper()</td>
                    <td class="descricao">@string.Format("{0:N}", evento.Referencia)</td>
                    @if (evento.Vencimento != 0)
                    {
                        <td class="descricao vencimento">@string.Format("{0:N}", evento.Vencimento)</td>
                    }
                    else
                    {
                        <td class="descricao vencimento"></td>
                    }

                    @if (evento.Desconto != 0)
                    {
                        <td class="descricao desconto">@string.Format("{0:N}", evento.Desconto) </td>
                    }
                    else
                    {
                        <td class="descricao desconto"></td>
                    }

                </tr>
            }

        </table>

    </div>
    <div class="rodape">
        <div class="rodape-topo flexrow">

            <div class="mensagem">
                @Model.Mensagem.ToUpper()
            </div>

            <div>

                <table class="rodape-table">
                    <tr>
                        <th>Total Vencimentos --></th>
                        <td>R$ @string.Format("{0:N}", Model.TotalVencimentos)</td>
                    </tr>
                    <tr>
                        <th>Total Descontos --></th>
                        <td>R$ @string.Format("{0:N}", Model.TotalDescontos)</td>
                    </tr>
                    <tr>
                        <th>Total Líquido --></th>
                        <td>R$ @string.Format("{0:N}", Model.TotalLiquido)</td>
                    </tr>
                </table>

            </div>
        </div>

        <div class="rodape-base">
            <table class="center">
                <thead>
                    <tr>
                        <th>Salário Base</th>
                        <th>Sal.Contr.INSS</th>
                        <th>Base Calculo FGTS</th>
                        <th>FGTS do MES</th>
                        <th>Base Calculo IRRF</th>
                        <th>Faixa IRRF</th>
                    </tr>
                </thead>
                <tr>
                    <td>@string.Format("{0:N}", Model.SalarioBase)</td>
                    <td>@string.Format("{0:N}", Model.SalarioINSS)</td>
                    <td>@string.Format("{0:N}", Model.BaseCalculoFGTS)</td>
                    <td>@string.Format("{0:N}", Model.FGTSdoMes)</td>
                    <td>@string.Format("{0:N}", Model.BaseCalculoIRRF)</td>

                    @if (Model.FaixaIRRF != "" && Model.FaixaIRRF != null)
                    {
                        <td>@Model.FaixaIRRF</td>
                    }
                    else
                    {
                        <td>*****</td>
                    }

                </tr>
            </table>

        </div>
    </div>

    <div class="validacao flexrow" >

        <div>
           
            <br />
            
            Holerite emitido digitalmente @Globalization.DataAtualExtensoBR(), poderá ser validado <br /> pelo site http://wwww.eletroleste.com.br/RHOnline/Validacao/Validar? com o código ou através do QRCode:  <br /> @Model.Autenticacao

            @{
                string source = "https://api.qrserver.com/v1/create-qr-code/?data=http://wwww.eletroleste.com.br/RHOnline/Validacao/Validar?key=" + Model.Autenticacao + "&amp;size=100x100";
            }

        </div>

        <div style="padding: 10px 70px 10px 10px">

            <img id='qrcode'
                 src="@source"
                 alt="Validacao"
                 title="Validação"
                 width="100"
                 height="100" />

        </div>
    </div>

    <script type="text/javascript">


    </script>

</body>

</html>


